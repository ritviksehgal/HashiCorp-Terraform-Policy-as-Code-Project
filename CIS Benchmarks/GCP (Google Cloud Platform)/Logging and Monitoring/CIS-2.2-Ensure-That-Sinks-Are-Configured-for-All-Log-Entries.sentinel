//This policy is to ensure that storage for cloud logging is configured for All Log Entries. In order to do this,
// we create a Sink at the Project- level to aggregate and export all project- level logs entries to a SIEM
//(Security Information and Event Management). CIS beckmarks for Google Cloud v1.3 Policy 2.2


// Resources impacted: Cloud Logging and project level and folder level. For each resource, we will implement 2 rules.
//First, we will ensure that the storage sinks do not have any filters, this will ensure that ALL audit log entries are properly stored, no exceptions.
//Second, the project level log entries are written to a storage sink using a unique writer (unique service account) for accountibility

import "tfplan/v2" as plan

project_sinks = filter plan.resource_changes as _, resource_changes {
    resource_changes.type is "google_logging_project_sink" and
        resource_changes.mode is "managed" and
        (resource_changes.change.actions is ["create"] or
            resource_changes.change.actions is ["update"])
}

project_sinks_for_log_aggregation = rule {
	all project_sinks as _, resources {
		keys(resources.change.after) contains "destination" and
            		resources.change.after.filter is null and
            			resources.change.after.unique_writer_identity is true
	    }
}
# Use a unique writer (creates a unique service account used for writing logs to the sink)



if project_sinks_for_log_aggregation is false {
print("Remove all filters from the Sink configuration. This will allow the Sink to aggreate ALL project- level logs in one location to prepare for export to SIEM.")

}


main = rule {
project_sinks_for_log_aggregation
}